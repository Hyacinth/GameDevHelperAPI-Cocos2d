
#import "Sprites_LoadSpriteFromPNGTest.h"

#pragma mark - Sprites_LoadSpriteFromPNGTest

@implementation Sprites_LoadSpriteFromPNGTest

-(void) dealloc
{
	[super dealloc];
}

-(id)init{
    self = [super init];
    if(self){
        
    }
    return self;
}

-(NSString*)initTest{

    CGSize s = [CCDirector sharedDirector].winSize;
    
#if 1
		// Use batch node. Faster
        //when using batches - load a batch node using the generated image
		batchNodeParent = [CCSpriteBatchNode batchNodeWithFile:@"RES_Sprites_LoadSpriteFromPNGTest/loadSprites_spritesSheet.png"
                                                      capacity:100];
		[self addChild:batchNodeParent z:0];
#endif
        

    //load into the sprite frame cache the plist generated by SH
    [[CCSpriteFrameCache sharedSpriteFrameCache] addSpriteFramesWithFile:@"RES_Sprites_LoadSpriteFromPNGTest/loadSprites_spritesSheet.plist"];

    [self executeTestCodeAtPosition:ccp(s.width/2, s.height/2)];
    
    return @"Tap screen to create sprites";
}

-(void)executeTestCodeAtPosition:(CGPoint)p
{
    NSArray *spriteFrameNames = [NSArray arrayWithObjects:
                                 @"backpack",
                                 @"banana",
                                 @"bananabunch",
                                 @"canteen",
                                 @"hat",
                                 @"pineapple",
                                 @"statue",
                                 nil];
    
    int spriteNameIdx = arc4random() % [spriteFrameNames count];
    
    NSString* sprFrameName = [spriteFrameNames objectAtIndex:spriteNameIdx];
    
    //if you want to load color, opacity and other properties set on sprites inside SH
    //you must use a GHSprite to do that.
    //GHSprite is a subclass of CCSprite that adds some helper methods
    GHSprite* newSpr = [GHSprite spriteWithSpriteFrameName:sprFrameName];
    
    
    //else you can also use a CCSprite
//    CCSprite* newSpr = [CCSprite spriteWithSpriteFrameName:sprFrameName];
    
    
    [newSpr setPosition:p];
    
    
    if(batchNodeParent != nil){//if we use batch nodes we must add the sprite to its batch parent
        [batchNodeParent addChild:newSpr];
    }
    else{//if we dont use batch nodes then we must add the sprite to a normal node - e.g the layer or another node
        [self addChild:newSpr];
    }
}
@end













////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#pragma mark - AppDelegate

#ifdef __CC_PLATFORM_IOS

@implementation AppController

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    NSMutableDictionary* options = nil;
    if(launchOptions == nil){
        options = [NSMutableDictionary dictionary];
    }
    else{
        options = [NSMutableDictionary dictionaryWithDictionary:launchOptions];
    }
    [options setObject:[NSNumber numberWithBool:YES] forKey:@"GH_SET_AS_PORTRAIT"];
    
    
    
    
	[super application:application didFinishLaunchingWithOptions:options];
    
	// Turn on display FPS
	[director_ setDisplayStats:YES];
    
	// Turn on multiple touches
	[director_.view setMultipleTouchEnabled:YES];
    
	// 2D projection
	[director_ setProjection:kCCDirectorProjection2D];
    //	[director_ setProjection:kCCDirectorProjection3D];
    
	// Enables High Res mode (Retina Display) on iPhone 4 and maintains low res on all other devices
	if( ! [director_ enableRetinaDisplay:YES] )
		CCLOG(@"Retina Display Not supported");
    
    
	// Default texture format for PNG/BMP/TIFF/JPEG/GIF images
	// It can be RGBA8888, RGBA4444, RGB5_A1, RGB565
	// You can change anytime.
	[CCTexture2D setDefaultAlphaPixelFormat:kCCTexture2DPixelFormat_RGBA8888];
    
	// Assume that PVR images have the alpha channel premultiplied
	[CCTexture2D PVRImagesHavePremultipliedAlpha:YES];
    
	// If the 1st suffix is not found, then the fallback suffixes are going to used. If none is found, it will try with the name without suffix.
	// On iPad HD  : "-ipadhd", "-ipad",  "-hd"
	// On iPad     : "-ipad", "-hd"
	// On iPhone HD: "-hd"
	CCFileUtils *sharedFileUtils = [CCFileUtils sharedFileUtils];
	[sharedFileUtils setEnableFallbackSuffixes:YES];			// Default: NO. No fallback suffixes are going to be used
	[sharedFileUtils setiPhoneRetinaDisplaySuffix:@"-hd"];		// Default on iPhone RetinaDisplay is "-hd"
	[sharedFileUtils setiPadSuffix:@"-ipad"];					// Default on iPad is "ipad"
	[sharedFileUtils setiPadRetinaDisplaySuffix:@"-ipadhd"];	// Default on iPad RetinaDisplay is "-ipadhd"
    
	// add layer
	CCScene *scene = [CCScene node];
	id layer = [TEST_CLASS node];
	[scene addChild:layer z:0];
    
	[director_ pushScene: scene];
    
	return YES;
}

@end

#elif defined(__CC_PLATFORM_MAC)

#pragma mark AppController - Mac

@implementation AppController

- (void)applicationDidFinishLaunching:(NSNotification *)aNotification
{
	[super applicationDidFinishLaunching:aNotification];
    
	// add layer
	CCScene *scene = [CCScene node];
	[scene addChild: [TEST_CLASS node] ];
    
	[director_ runWithScene:scene];
}
@end
#endif

